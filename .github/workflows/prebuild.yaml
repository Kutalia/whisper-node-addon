name: Build and Release
on:
  workflow_dispatch:
  push:
    tags: [ 'v*' ]  # 仅通过 tag 触发

jobs:
  build-multi-platform:
    name: Build for ${{ matrix.os }} (${{ matrix.arch }})
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        include:
          - os: win
            arch: x64
            runs-on: windows-latest
            build-script: "build:win"
            zip-tool: "powershell Compress-Archive -Path 'dist/win32-x64/' -DestinationPath 'dist/whisper-node-addon-win-x64-electron-37.1.0.zip' -Force"
          - os: mac
            arch: x64
            runs-on: macos-latest
            build-script: "build:mac"
            zip-tool: "zip -r dist/whisper-node-addon-mac-x64-electron-37.1.0.zip dist/mac-x64/"
          - os: mac
            arch: arm64
            runs-on: macos-latest
            build-script: "build:mac"
            zip-tool: "zip -r dist/whisper-node-addon-mac-arm64-electron-37.1.0.zip dist/mac-arm64/"
          - os: linux
            arch: x64
            runs-on: ubuntu-latest
            build-script: "build:linux"
            zip-tool: "zip -r dist/whisper-node-addon-linux-x64-electron-37.1.0.zip dist/linux-x64/"

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Vulkan SDK
        uses: humbletim/install-vulkan-sdk@v1.2
        with:
          version: 1.4.309.0
          cache: true

      - name: Setup Git for Windows' minimal SDK
        uses: git-for-windows/setup-git-for-windows-sdk@v1

      - name: Add PowerShell to PATH
        if: runner.os == 'Windows'
        run: |
          $env:PATH = "$env:ProgramFiles\PowerShell\7;" + $env:PATH
          Write-Output "PATH=$env:PATH" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8

      - name: Install pkgconfiglite
        if: runner.os == 'Windows'
        run: |
          choco install pkgconfiglite

      - name: Install Dependencies
        run: npm install

      - name: Build for ${{ matrix.os }} (${{ matrix.arch }})
        shell: bash
        run: |
          npm run ${{ matrix.build-script }}-${{ matrix.arch }}
        env:
          # 可选：传递平台和架构参数给构建脚本
          PLATFORM: ${{ matrix.os }}
          ARCH: ${{ matrix.arch }}

      - name: Create ZIP Package
        shell: bash
        run: | # Along with dist create windows build folder manually as well because powershell is not doing so when zipping
          mkdir -p dist/win32-x64
          ${{ matrix.zip-tool }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: whisper-node-addon-${{ matrix.os }}-${{ matrix.arch }}.zip
          path: dist/*.zip  # 只上传 ZIP 文件

  publish-release:
    name: Publish Release
    needs: [build-multi-platform]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }} (Electron 37.1.0)
          body: |
            Pre-compiled binaries for Electron 37.1.0
            
            **Supported Platforms**:
            - 🪟 Windows x64
            - 🍎 macOS x64/arm64
            - 🐧 Linux x64
          files: |
            artifacts/**/*.zip
          draft: true
          prerelease: false
